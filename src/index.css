@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap");
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
@import url("https://fonts.googleapis.com/css2?family=Raleway:wght@400;500;600;700;800;900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Custom CSS variables can be defined here if needed, but prefer Tailwind theme for consistency */
}

* {
  scroll-behavior: smooth;
}

.ripple {
  position: absolute;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.6); /* Slightly more subtle white */
  transform: scale(0);
  /* animation will be applied via media query */
  pointer-events: none; /* Make sure it doesn't interfere with button clicks */
  z-index: 10; /* Ensure ripple is visible on top of button content if any */
}

@media (prefers-reduced-motion: no-preference) {
  .ripple {
    animation: ripple 600ms linear;
  }

  @keyframes ripple {
    to {
      transform: scale(4);
      opacity: 0;
    }
  }
}


/*
  Removed unused utility classes:
  - .text-gradient
  - .bg-blue-gradient
  - .bg-black-gradient
  - .bg-black-gradient-2
  - .bg-gray-gradient
  - .bg-discount-gradient
  - .box-shadow
  - .blue__gradient
  - .pink__gradient
  - .white__gradient

  Removed .sidebar and slide-top animation as they seemed unused.
  Removed .feature-card and .feedback-card styles as they seemed unused.
*/

/* Interactive Cube Styles */
:root {
  /* Make Tailwind colors available as CSS variables for the cube */
  --color-accent-primary: #38BDF8; /* sky-400 */
  --color-accent-primary-darker: #0EA5E9; /* sky-500 */

  /* Text colors for cube faces - these might need adjustment based on cube face background */
  --cube-text-light: #1F2937; /* gray-800 */
  --cube-text-dark: #E2E8F0; /* slate-200 */

  /* Backgrounds for cube faces - using accent with opacity */
  --cube-bg-light-face: rgba(56, 189, 248, 0.2);
  --cube-bg-dark-face: rgba(56, 189, 248, 0.3);
}

.scene {
  perspective: 800px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.cube {
  transform-style: preserve-3d;
  width: 100%; /* Takes width from .scene parent */
  height: 100%; /* Takes height from .scene parent */
  position: relative;
  animation: cube-spin 20s infinite linear;
}

@media (prefers-reduced-motion: reduce) {
  .cube {
    animation: none;
    transform: rotateX(20deg) rotateY(-30deg); /* Static, interesting angle */
  }
}

.cube__face {
  position: absolute; /* Ensure faces are positioned within the cube */
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: 'Courier New', Courier, monospace;
  font-weight: bold;
  backface-visibility: hidden; /* Optional: hide back of faces if they are one-sided */

  background-color: var(--cube-bg-light-face);
  border: 1px solid var(--color-accent-primary);
  color: var(--cube-text-light);
}

.dark .cube__face { /* Styles for when dark mode is active on a parent */
  background-color: var(--cube-bg-dark-face);
  border-color: var(--color-accent-primary-darker);
  color: var(--cube-text-dark);
}

.cube__face--front  { transform: rotateY(  0deg) translateZ(50%); } /* 50% of parent cube's width/height */
.cube__face--back   { transform: rotateY(180deg) translateZ(50%); }
.cube__face--right  { transform: rotateY( 90deg) translateZ(50%); }
.cube__face--left   { transform: rotateY(-90deg) translateZ(50%); }
.cube__face--top    { transform: rotateX( 90deg) translateZ(50%); }
.cube__face--bottom { transform: rotateX(-90deg) translateZ(50%); }

@keyframes cube-spin {
  from { transform: rotateX(0deg) rotateY(0deg); }
  to   { transform: rotateX(360deg) rotateY(360deg); }
}
